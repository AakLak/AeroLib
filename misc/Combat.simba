{
======
Combat
======
}

function getHPBars(): TPointArray;
var
  B          : TBox;
  P          : TPoint;
  i          : Integer;
  colG,colR  : TColEx;
  tpa,tpa2   : TPointArray;
  atpa,atpa2 : T2DPointArray;
begin
  if not isLoggedIn() then Exit;

  colG := createCol(65280, 1);
  colR := createCol(255, 1);

  if not colG.findAllIn(AREA_MS, tpa) then exit;

  atpa := clusterTPA(tpa, 1);
  tpa  := [];
  for i:=0 to High(atpa) do
  begin
    B    := atpa[i].getBounds();
    B    := toBox(B.X1-1, B.Y1, B.X2+1, B.Y2);
    tpa2 := atpa[i];

    if colR.findAllIn(B, tpa) then
    begin
      sortTPAFrom(tpa, tpa.midPnt());
      P   := tpa[0];
      tpa := [];
      B   := toBox(P.X-1, P.Y-2, P.X+28, P.Y+2);
      if colR.findAllIn(B, tpa) then
      begin
        atpa2 := clusterTPA(tpa, 1);
        tpa   := [];
        sortATPAFromFirstPoint(atpa2, P);
        combineTPAWrap(tpa2, atpa2[0], tpa);
      end;
    end;

    if length(tpa) > 0 then
      B := tpa.getBounds()
    else
      B := atpa[i].getBounds();

    if (inRange(B.Width, 27, 31) and (inRange(B.Height, 4, 6))) then
    begin
      setArrayLength(Result, Length(Result)+1);
      Result[High(Result)] := B.MidPoint;
    end;
  end;
end;

function getDeadHPBars(): TPointArray;
var
  B          : TBox;
  P          : TPoint;
  i          : Integer;
  colG,colR  : TColEx;
  tpa,tpa2   : TPointArray;
  atpa,atpa2 : T2DPointArray;
begin
  if not isLoggedIn() then Exit;

  colR := createCol(255, 1);

  if not colr.findAllIn(AREA_MS, tpa) then exit;

  atpa := clusterTPA(tpa, 1);
  tpa  := [];
  for i:=0 to High(atpa) do
  begin
    B    := atpa[i].getBounds();
    if (inRange(B.Width, 27, 31) and (inRange(B.Height, 4, 6))) then
    begin
      setArrayLength(Result, Length(Result)+1);
      Result[High(Result)] := B.MidPoint;
    end;
  end;
end;

function foundHPBarIn(Area: TBox): Boolean;
var
  i     : Integer;
  B1,B2,
  Bars  : TPointArray;
begin
  if not isLoggedIn() then Exit(false);

  B1 := getHPBars();
  B2 := getDeadHPBars();
  combineTPAWrap(B1, B2, Bars);
  if length(Bars) < 1 then
    exit(false);

  for i:=0 to high(Bars) do
    if pointInBox(Bars[i], Area) then
      Exit(true);
end;
